#version 430

#extension GL_ARB_shading_language_include : require
#include </data/shaders/common/reprojection.glsl>

layout (local_size_x = 8, local_size_y = 8, local_size_x = 1) in;

layout (r32ui, binding = 0) restrict writeonly uniform uimage2D clusterIDs;

uniform sampler2D depthSampler;

uniform mat4 projectionMatrix;

const int clusterPixelSize = 64;
const float farPlane = 50;
const int numDepthSlices = 16;
const int numSlicesIntoFirstSlice = 3;
const float scaleFactor = (numDepthSlices + numSlicesIntoFirstSlice) / log2(farPlane);

void main()
{
    ivec2 fragCoord = ivec2(gl_WorkGroupID.xy * gl_WorkGroupSize.xy + gl_LocalInvocationID.xy);

    float depth = linearDepth(depthSampler, fragCoord, projectionMatrix);

    int depthSlice = int(max(log2(-depth) * scaleFactor - numSlicesIntoFirstSlice, 0));
    uvec3 clusterCoord = uvec3(uvec2(fragCoord.xy) / clusterPixelSize, depthSlice);

    // outID = vec3(clusterCoord) / 16;
    uint outID = clusterCoord.x | clusterCoord.y << 8 | clusterCoord.z << 16;
    imageStore(clusterIDs, fragCoord, uvec4(outID, 0, 0, 0));
}
